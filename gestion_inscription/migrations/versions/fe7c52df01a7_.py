"""empty message

Revision ID: fe7c52df01a7
Revises: 
Create Date: 2024-03-16 13:14:21.221458

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'fe7c52df01a7'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('annee_scolaire',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('isArchived', sa.Boolean(), nullable=False),
    sa.Column('isActive', sa.Boolean(), nullable=False),
    sa.Column('libelle', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('libelle')
    )
    op.create_table('filiere',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('libelle', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('libelle')
    )
    op.create_table('module',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('isArchived', sa.Boolean(), nullable=False),
    sa.Column('libelle', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('libelle')
    )
    op.create_table('niveau',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('libelle', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('libelle')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('libelle', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('libelle')
    )
    op.create_table('salle',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('isArchived', sa.Boolean(), nullable=False),
    sa.Column('libelle', sa.String(length=20), nullable=False),
    sa.Column('nbrePlace', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('libelle')
    )
    op.create_table('classe',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('isArchived', sa.Boolean(), nullable=False),
    sa.Column('libelle', sa.String(length=20), nullable=False),
    sa.Column('effectif', sa.Integer(), nullable=True),
    sa.Column('niveau_id', sa.Integer(), nullable=True),
    sa.Column('filiere_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['filiere_id'], ['filiere.id'], ),
    sa.ForeignKeyConstraint(['niveau_id'], ['niveau.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('libelle')
    )
    op.create_table('semestre',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('libelle', sa.String(length=20), nullable=False),
    sa.Column('isActive', sa.Boolean(), nullable=False),
    sa.Column('niveau_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['niveau_id'], ['niveau.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('libelle')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('isArchived', sa.Boolean(), nullable=False),
    sa.Column('login', sa.String(length=50), nullable=False),
    sa.Column('password', sa.Text(), nullable=False),
    sa.Column('nomComplet', sa.String(length=100), nullable=False),
    sa.Column('type', sa.String(length=20), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('login')
    )
    op.create_table('etudiant',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('matricule', sa.String(length=20), nullable=False),
    sa.Column('tuteur', sa.String(length=50), nullable=False),
    sa.Column('photo', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('matricule'),
    sa.UniqueConstraint('photo')
    )
    op.create_table('professeur',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('portable', sa.String(length=20), nullable=False),
    sa.Column('grade', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('portable')
    )
    op.create_table('cours',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('isArchived', sa.Boolean(), nullable=False),
    sa.Column('createAt', sa.Date(), nullable=False),
    sa.Column('nbreHeureTotal', sa.Integer(), nullable=True),
    sa.Column('nbreHeureRestantPlan', sa.Integer(), nullable=True),
    sa.Column('nbreHeureRealise', sa.Integer(), nullable=True),
    sa.Column('anneeScolaire_id', sa.Integer(), nullable=True),
    sa.Column('semestre_id', sa.Integer(), nullable=True),
    sa.Column('module_id', sa.Integer(), nullable=True),
    sa.Column('professeur_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['anneeScolaire_id'], ['annee_scolaire.id'], ),
    sa.ForeignKeyConstraint(['module_id'], ['module.id'], ),
    sa.ForeignKeyConstraint(['professeur_id'], ['professeur.id'], ),
    sa.ForeignKeyConstraint(['semestre_id'], ['semestre.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('enseignement',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('anneeScolaire_id', sa.Integer(), nullable=True),
    sa.Column('professeur_id', sa.Integer(), nullable=True),
    sa.Column('classe_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['anneeScolaire_id'], ['annee_scolaire.id'], ),
    sa.ForeignKeyConstraint(['classe_id'], ['classe.id'], ),
    sa.ForeignKeyConstraint(['professeur_id'], ['professeur.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('inscription',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('isArchived', sa.Boolean(), nullable=False),
    sa.Column('createAt', sa.Date(), nullable=False),
    sa.Column('anneeScolaire_id', sa.Integer(), nullable=True),
    sa.Column('classe_id', sa.Integer(), nullable=True),
    sa.Column('etudiant_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['anneeScolaire_id'], ['annee_scolaire.id'], ),
    sa.ForeignKeyConstraint(['classe_id'], ['classe.id'], ),
    sa.ForeignKeyConstraint(['etudiant_id'], ['etudiant.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('classe_cours',
    sa.Column('classe_id', sa.Integer(), nullable=False),
    sa.Column('cours_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['classe_id'], ['classe.id'], ),
    sa.ForeignKeyConstraint(['cours_id'], ['cours.id'], ),
    sa.PrimaryKeyConstraint('classe_id', 'cours_id')
    )
    op.create_table('enseignement_module',
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.Column('enseignement_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['enseignement_id'], ['enseignement.id'], ),
    sa.ForeignKeyConstraint(['module_id'], ['module.id'], ),
    sa.PrimaryKeyConstraint('module_id', 'enseignement_id')
    )
    op.create_table('seance',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('isArchived', sa.Boolean(), nullable=False),
    sa.Column('isAbsence', sa.Boolean(), nullable=False),
    sa.Column('codeSeance', sa.String(length=20), nullable=True),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('heureD', sa.Time(), nullable=False),
    sa.Column('heureF', sa.Time(), nullable=False),
    sa.Column('cours_id', sa.Integer(), nullable=True),
    sa.Column('salle_id', sa.Integer(), nullable=True),
    sa.Column('professeur_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cours_id'], ['cours.id'], ),
    sa.ForeignKeyConstraint(['professeur_id'], ['professeur.id'], ),
    sa.ForeignKeyConstraint(['salle_id'], ['salle.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('absence',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('isArchived', sa.Boolean(), nullable=False),
    sa.Column('etudiant_id', sa.Integer(), nullable=True),
    sa.Column('seance_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['etudiant_id'], ['etudiant.id'], ),
    sa.ForeignKeyConstraint(['seance_id'], ['seance.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('declaration',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('motif', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('seance_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['seance_id'], ['seance.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('declaration')
    op.drop_table('absence')
    op.drop_table('seance')
    op.drop_table('enseignement_module')
    op.drop_table('classe_cours')
    op.drop_table('inscription')
    op.drop_table('enseignement')
    op.drop_table('cours')
    op.drop_table('professeur')
    op.drop_table('etudiant')
    op.drop_table('user')
    op.drop_table('semestre')
    op.drop_table('classe')
    op.drop_table('salle')
    op.drop_table('role')
    op.drop_table('niveau')
    op.drop_table('module')
    op.drop_table('filiere')
    op.drop_table('annee_scolaire')
    # ### end Alembic commands ###
